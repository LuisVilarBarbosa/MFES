/* Represents the public profile of a place. */
class Place
types
	public static Places = set of Place;
values
instance variables
	public name : Common`String1;
	public description : Common`String;
	public address : Common`Address;
	public positive_votes : nat;
	public negative_votes : nat;
	public static places : Places := {};
operations
	public Place : Common`String1 * Common`String * Common`Address ==> Place
	Place(n,desc,addr) == (
		name := n;
		description := desc;
		address := addr;
		positive_votes := 0;
		negative_votes := 0;
		places := places union {self};
	)
	post name = n and description = desc and address = addr and positive_votes = 0
		and negative_votes = 0 and places~ = places \ {self};

	public SetName : Common`String1 ==> ()
	SetName(n) == name := n
	post name = n;

	public SetDescription : Common`String ==> ()
	SetDescription(d) == description := d
	post description = d;

	public static RemovePlace : Place ==> ()
	RemovePlace(p) == places := places \ {p}
	pre p in set places
	post p not in set places and places~ = places union {p};
functions
traces
end Place