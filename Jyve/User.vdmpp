class User
types
	public static Conversations = set of Conversation;
values
instance variables
	public name : Common`String1;
	public conversations : Conversations;
operations
	public User : Common`String1 ==> User
	User(n) == (
		name := n;
		conversations := {};
	)
	post name = n and conversations = {};

	public SetName : Common`String1 ==> ()
	SetName(n) == name := n
	post name = n;

	public AddConversation : Conversation ==> ()
	AddConversation(c) == (
		if (c not in set conversations) then (
			conversations := conversations union {c};
			c.AddMember(self);
		);
	)
	post c in set conversations and (conversations~ = conversations or conversations~ = conversations \ {c}) and self in set c.members;

	public RemoveConversation : Conversation ==> ()
	RemoveConversation(c) == (
		if (c in set conversations) then (
			conversations := conversations \ {c};
			c.RemoveMember(self);
		);
	)
	post c not in set conversations and (conversations~ = conversations or conversations~ = conversations union {c}) and self not in set c.members;
functions
traces
end User