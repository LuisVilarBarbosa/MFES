class PrivateUser is subclass of User
types
	public static Email = Common`String1
		;--inv e == isEmail(e);
	public static Password = Common`String1
		inv p == len p >= minLength;
values
	private minLength = 8;
instance variables
	-- Variables declared public to facilitate queries
	public email : Email;
	public password : Password;
	public myPublicUsers : set of PublicUser;
	private static privateUsers : set of PrivateUser := {};
operations
	public PrivateUser : Common`String1 * Email * Password ==> PrivateUser
	PrivateUser(n,e,pass) == (
		email := e;
		password := pass;
		myPublicUsers := {};
		privateUsers := privateUsers union {self};
		User(n);
	)
	pre forall u in set privateUsers & u.email <> e
	post privateUsers inter {self} = {self};

	public AddPublicUser : PublicUser ==> ()
	AddPublicUser(publicUser) == myPublicUsers := myPublicUsers union {publicUser}
	pre myPublicUsers inter {publicUser} = {}
	post myPublicUsers inter {publicUser} = {publicUser};
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end PrivateUser