class User
types
	public static Conversations = set of Conversation;
values
instance variables
	-- Variables declared public to facilitate queries
	public name : Common`String1;
	public conversations : Conversations;
operations
	public User : Common`String1 ==> User
	User(n) == (
		name := n;
		conversations := {};
	)
	--pre
	post name = n and conversations = {};

	public SetName : Common`String1 ==> ()
	SetName(n) == name := n
	--pre 
	post name = n;

	public AddConversation : Conversation ==> ()
	AddConversation(c) == (
		if (conversations inter {c} = {}) then (
			conversations := conversations union {c};
			c.AddMember(self);
		);
	)
	--pre conversations inter {c} = {}
	post conversations inter {c} = {c};

	public RemoveConversation : Conversation ==> ()
	RemoveConversation(c) == (
		if (conversations inter {c} = {c}) then (
			conversations := conversations \ {c};
			c.RemoveMember(self);
		);
	)
	--pre conversations inter {c} = {c} and c.members inter {self} = {self}
	post conversations inter {c} = {} and c.members inter {self} = {};
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end User