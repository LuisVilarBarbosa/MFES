class Artist is subclass of PublicUser
types
	public static Bands = set of Band;
	public static Artists = set of Artist;
values
-- TODO Define values here
instance variables
	-- Variables declared public to facilitate queries
	public memberOf : Bands;
	public static artists : Artists := {};
operations
	public Artist : Common`String1 * Common`Address ==> Artist
	Artist(stgName,loc) == (
		memberOf := {};
		artists := artists union {self};
		PublicUser(stgName,loc);
	);
	-- post
	
	public AddBand : Band ==> ()
	AddBand(b) == memberOf := memberOf union {b}
	pre memberOf inter {b} = {}
	post memberOf inter {b} = {b};
	
	public RemoveBand : Band ==> ()
	RemoveBand(b) == memberOf := memberOf \ {b}
	pre memberOf inter {b} = {b}
	post memberOf inter {b} = {};

	public GetBands : Common`String ==> Bands
	GetBands(searchStr) == (
		dcl results : Bands := {};
		for all band in set memberOf do
			if(Common`ContainsStr2(band.name,searchStr)) then
					results := results union {band};
		return results;
	);
	--pre
	--post;

	public GetArtists : Common`String ==> Artists
	GetArtists(searchStr) == (
		dcl results : Artists := {};
		for all artist in set artists do
			if(Common`ContainsStr2(artist.name,searchStr)) then
					results := results union {artist};
		return results;
	);
	--pre
	--post;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Artist