class Artist is subclass of PublicUser
types
	public static Bands = set of Band;
	public static Musics = set of Music;
values
-- TODO Define values here
instance variables
	private firstName : Common`String1;
	private lastName : Common`String1;
	private stageName : Common`String := "";
	private memberOf : Bands := {};
	private musics : Musics := {};
	private location : Address;
	private genres : seq of Genre;
	private instruments : seq of Instrument;
	private description : Common`String := "";
	private static artists : set of Artist := {};
operations
	public Artist : Common`String1 * Common`String1 * Common`String * Bands * Musics * Address * seq of Genre * seq of Instrument * Common`String ==> Artist
	Artist(a,b,c,d,e,f,g,h,i) == (
		--PublicUser();
		firstName := a;
		lastName := b;
		stageName := c;
		memberOf := d;
		musics := e;
		location := f;
		genres := g;
		instruments := h;
		description := i;
		artists := artists union {self};
		return self;
	);
	-- post
	
	public SetStageName(n : Common`String) == (
		stageName := n;
	)
	--pre 
	post stageName = n;
	
	public AddBand(b : Band) == (
		memberOf := memberOf union {b};
	)
	pre memberOf inter {b} = {}
	post memberOf inter {b} = {b};
	
	public RemoveBand(b : Band) == (
		memberOf := memberOf \ {b};
	)
	pre memberOf inter {b} = {b}
	post memberOf inter {b} = {};
	
	/*public GetArtists() == (
		return artists;
	)
	pre
	post;*/
	
	public GetBand : () ==> Bands
	GetBand() == (
		return memberOf;
	);
	--pre
	--post;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Artist