class Common
types
	public static String = seq of char;
	public static String1 = seq1 of char;
	public static Address ::
		street : String
		number : String
		city : String1
		zipcode : String;
	public static Date ::
		year : nat1
		month : nat1
		day : nat1
		inv d == d.month  <= 12 and d.day <= DaysOfMonth(d.year, d.month);
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
operations
	public static ContainsStr2 : String1 * String1 ==> bool
	ContainsStr2(str1,str2) == (
		for i = 0 to len str1 - len str2 do (
			dcl res : bool := true;
			for j = 0 to len str2 - 1 do (
				if (str1(i+j) <> str2(j)) then
					res := false;
			);
			if(res) then
				return res;
		);
		return false;
	);
	--pre
	--post;

	public static CreateAddress : String * String * String1 * String ==> Address
	CreateAddress(stt,num,c,zip) == (
		return mk_Address(stt,num,c,zip);
	);
	--pre
	--pos

	public static CreateDate : nat1 * nat1 * nat1 ==> Date
	CreateDate(y,m,d) == (
		return mk_Date(y,m,d);
	);
	--pre
	--pos
functions
	public static DaysOfMonth : nat1 * nat1 +> nat1
	DaysOfMonth(y,m) == (
		if (m = 2) then (
			if (y mod 400 = 0) or ((y mod 4 = 0) and (y mod 100 <> 0))
				then 29
			else 28
		)
		else 31 - (m - 1) mod 7 mod 2
	)
	pre m <= 12
	post RESULT <= 31;
traces
-- TODO Define Combinatorial Test Traces here
end Common